#  This file is part of First Step.
#  
#  First Step is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software 
#  Foundation, either version 3 of the License, or (at your option) any later version. 
#
#  First Step is distributed in the hope that it will be useful, but 
#  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with First Step.  If not, see <http://www.gnu.org/licenses/>
#
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2014

decl printint ptr func(int32)

func waste(a,b int8) int16
  return a * b
/func

func add1(a ptr int8) 
  val a = val a + 3
/func

entry

  var a int8
  var b ptr int8 
  a = (-7+8)/3 #comment!
    
  #comment of some sort.
  #nothing important at all.

  a++
  a--

  a = a / 2

  if a != 3
    a = !a
  /if

  a = -6

  if a == -6
    printint(a)
  /if

  if a < 0  
   
    a=33
   
  /if

  printint(waste(a, a + 1))

  add1(ptr a)

  printint(a)

/entry
